import { useState } from 'react';
import { supabase } from '../lib/supabaseClient';

export default function NewCampaignForm({ user }) {
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [image, setImage] = useState('');
  const [scope, setScope] = useState('');
  const [region, setRegion] = useState('');
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

    const { data, error } = await supabase
      .from('campaigns')
      .insert([{
        title,
        description,
        image,
        scope,
        region,
        status: user ? 'live' : 'pending',
        created_by: user?.id || null
      }]);

    setLoading(false);

    if (error) {
      alert('Failed to create campaign');
      console.error(error);
    } else {
      alert('Campaign created!');
      setTitle('');
      setDescription('');
      setImage('');
      setScope('');
      setRegion('');
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Create a New Campaign</h2>

      <input
        type="text"
        placeholder="Title"
        value={title}
        onChange={e => setTitle(e.target.value)}
        required
      />

      <textarea
        placeholder="Description"
        value={description}
        onChange={e => setDescription(e.target.value)}
        required
      />

      <input
        type="text"
        placeholder="Image URL (optional)"
        value={image}
        onChange={e => setImage(e.target.value)}
      />

      <select value={scope} onChange={e => setScope(e.target.value)} required>
        <option value="">Select Scope</option>
        <option value="personal">Personal</option>
        <option value="social">Social</option>
        <option value="local">Local</option>
        <option value="global">Global</option>
        <option value="ecological">Ecological</option>
      </select>

      <input
        type="text"
        placeholder="Region (type manually or auto-fill)"
        value={region}
        onChange={e => setRegion(e.target.value)}
      />

      <button type="submit" disabled={loading}>
        {loading ? 'Submitting...' : 'Create Campaign'}
      </button>
    </form>
  );
}